name: basxconnect

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-custom_exit_code black isort bandit
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run black --check .
      run: black --check .
    - name: If needed, commit black changes to the pull request
      if: ${{ failure() }}
      run: |
        black .
        git config --global user.name 'autoblack'
        git config --global user.email 'autoblack@basx.org'
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
        git checkout $GITHUB_HEAD_REF
        git commit -am "fixup: Format Python code with Black"
        git push

    - name: Run isort --check-only .
      run: isort --check-only --profile=black .
    - name: If needed, commit isort changes to the pull request
      if: ${{ failure() }}
      run: |
        isort --profile=black .
        git config --global user.name 'autoisort'
        git config --global user.email 'autoisort@basx.org'
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
        git checkout $GITHUB_HEAD_REF
        git commit -am "fixup: Format Python code with isort"
        git push

    - name: Run bandit
      run: bandit -r .

    - name: Test with pytest
      run: |
        pytest --suppress-no-test-exit-code
